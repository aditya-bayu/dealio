{
  "_from": "nexmo",
  "_id": "nexmo@2.6.0",
  "_inBundle": false,
  "_integrity": "sha512-d5+9oDWw0Kihg8qQ7/jvwfHuNSXSHWA0dXFBSZRM+2ml0lFviXSJzg3hRLLMEyjgAeMIQZxjcIMiRdTPx1ULeQ==",
  "_location": "/nexmo",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "nexmo",
    "fetchSpec": "latest",
    "name": "nexmo",
    "raw": "nexmo",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/nexmo/-/nexmo-2.6.0.tgz",
  "_shasum": "83149655e11a92623671b8e38a10926aa270d9c5",
  "_spec": "nexmo",
  "_where": "C:\\nodejs\\dealio",
  "author": {
    "name": "nexmo"
  },
  "bugs": {
    "url": "https://github.com/nexmo/nexmo-node/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "nexmo"
    },
    {
      "name": "pvela"
    },
    {
      "name": "leggetter"
    },
    {
      "name": "akuzi"
    },
    {
      "name": "bpilot"
    },
    {
      "name": "justinfreitag"
    },
    {
      "name": "ecwyne"
    },
    {
      "name": "https://github.com/backhand"
    }
  ],
  "dependencies": {
    "jsonwebtoken": "^8.4.0",
    "request": "^2.88.0",
    "uuid": "^2.0.2"
  },
  "deprecated": false,
  "description": "Nexmo REST API client for Node.js. API support for SMS, Voice Calls, Text-to-Speech, Numbers, Verify (2FA) and more.",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-istanbul": "^4.1.6",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-register": "^6.7.2",
    "bluebird": "^3.5.3",
    "body-parser": "^1.18.3",
    "chai": "^3.5.0",
    "cross-env": "^5.2.0",
    "dotenv": "^2.0.0",
    "eslint": "^4.18",
    "eslint-config-prettier": "^6.2",
    "eslint-plugin-prettier": "^2.7",
    "expect.js": "^0.3.1",
    "express": "^4.16.4",
    "mocha": "^5.2.0",
    "ngrok": "^2.2.2",
    "nodemon": "^1.18.9",
    "nyc": "^14.1.1",
    "prettier": "^1.16.3",
    "sinon": "^1.17.4",
    "sinon-chai": "^2.8.0",
    "sinon-expect": "^0.3.0"
  },
  "homepage": "https://github.com/nexmo/nexmo-node",
  "keywords": [
    "2fa",
    "nexmo",
    "phone numbers",
    "sms",
    "verify",
    "voice"
  ],
  "license": "MIT",
  "main": "lib/Nexmo",
  "name": "nexmo",
  "optionalDependencies": {},
  "readme": "# Nexmo Client Library for Node.js\n[![build status](https://secure.travis-ci.org/Nexmo/nexmo-node.png)](http://travis-ci.org/Nexmo/nexmo-node)\n[![Known Vulnerabilities](https://snyk.io/test/github/Nexmo/nexmo-node/badge.svg)](https://snyk.io/test/github/Nexmo/nexmo-node)\n[![codecov](https://codecov.io/gh/Nexmo/nexmo-node/branch/master/graph/badge.svg)](https://codecov.io/gh/Nexmo/nexmo-node)\n\nA Node.JS REST API Wrapper library for [Nexmo](https://www.nexmo.com/).\n\nFor full API documentation refer to [developer.nexmo.com](https://developer.nexmo.com/).\n\n[![NPM](https://nodei.co/npm/nexmo.png)](https://nodei.co/npm/nexmo/)\n\n[Installation](#installation) | [Constructor](#constructor) | [Messaging](#messaging) | [Message Signing](#signature) | [Voice](#voice) | [Verify](#verify) | [Number Insight](#number-insight) | [Applications](#applications) | [Management](#management) | [Redact](#redact) | [Pricing](#pricing) | [JWT (JSON Web Token)](#jwt)\n\n## Installation\n\n```bash\nnpm install nexmo\n```\n\n## Constructor\n\n```js\nconst Nexmo = require('nexmo');\n\nconst nexmo = new Nexmo({\n    apiKey: API_KEY,\n    apiSecret: API_SECRET,\n    applicationId: APP_ID,\n    privateKey: PRIVATE_KEY_PATH,\n    signatureSecret: SIGNATURE_SECRET,\n    signatureMethod: SIGNATURE_METHOD\n  }, options);\n```\n\n* `apiKey` - API Key from Nexmo.\n* `apiSecret` - API SECRET from Nexmo.\n* `applicationId` - (optional) The Nexmo Application ID to be used when creating JWTs.\n* `privateKey` - (optional) The Private Key to be used when creating JWTs. You can specify the key as any of the following:\n  * A [Buffer](https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding) containing the file contents.\n  * A String containing the path to the key file on disk.\n* `signatureSecret` - (optional) API singature secret from Nexmo, used for signing SMS message requests\n* `signatureMethod` - (optional) singature method matching the one you gave Nexmo, used for signing SMS message requests. Must be one of \"md5hash\", \"md5\", \"sha1\", \"sha256\", or \"sha512\"\n* `options` - (optional) Additional options for the constructor.\n\nOptions are:\n\n```js\n{\n  // If true, log information to the console\n  debug: true|false,\n  // append info the the User-Agent sent to Nexmo\n  // e.g. pass 'my-app' for /nexmo-node/1.0.0/4.2.7/my-app\n  appendToUserAgent: string,\n  // Set a custom logger\n  logger: {\n    log: function() {level, args...}\n    info: function() {args...},\n    warn: function() {args...}\n  },\n  // Set a custom timeout for requests to Nexmo in milliseconds. Defaults to the standard for Node http requests, which is 120,000 ms.\n  timeout: integer,\n  // Set a custom host for requests instead of api.nexmo.com\n  apiHost: string,\n  // Set a custom host for requests instead of rest.nexmo.com\n  restHost: string\n}\n```\n\n## Messaging\n\n### Send a text message\n\n```js\nnexmo.message.sendSms(sender, recipient, message, options, callback);\n```\n\n* `options` - parameter is optional. See [SMS API Reference](https://developer.nexmo.com/api/sms#send-an-sms)\n\n### Send a Binary Message\n\n```js\nnexmo.message.sendBinaryMessage(fromnumber, tonumber, body, udh, callback);\n```\n\n* `body` - Hex encoded binary data\n* `udh` - Hex encoded udh\n\n### Send a WAP Push Message\n\n```js\nnexmo.message.sendWapPushMessage(fromnumber, tonumber, title, url, validity, callback);\n```\n\n* `validity` - is optional (if given should be in milliseconds)\n\n### Send a Short Code alert\n\n```js\nnexmo.message.shortcodeAlert(recipient, messageParams, opts, callback);\n```\n\n## Voice\n\nFor detailed information please see the documentation at https://developer.nexmo.com/api/voice\n\n### Make a call\n\nRequires `applicationId` and `privateKey` to be set on the constructor.\n\n```js\nnexmo.calls.create({\n  to: [{\n    type: 'phone',\n    number: TO_NUMBER\n  }],\n  from: {\n    type: 'phone',\n    number: FROM_NUMBER\n  },\n  answer_url: [ANSWER_URL]\n}, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#createCall\n\n### Get a Call\n\n```js\nnexmo.calls.get(callId, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#getCall\n\n### Query Calls\n\n```\nnexmo.calls.get({status: 'completed'}, callback);\n```\n\nThe first parameter can contain many properties to filter the returned call or to page results. For more information see the [Calls API Reference](https://developer.nexmo.com/api/voice#getCalls).\n\n### Update a Call\n\n```js\nnexmo.calls.update(callId, { action: 'hangup' }, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#updateCall\n\n### Stream an Audio File to a Call\n\n```js\nnexmo.calls.stream.start(\n  callId,\n  {\n    stream_url: [\n      'https://nexmo-community.github.io/ncco-examples/assets/voice_api_audio_streaming.mp3'\n    ],\n    loop: 1\n  });\n```\n\nFor more information see https://developer.nexmo.com/api/voice#startStream\n\n### Stop an audio stream in a call\n\n```js\nnexmo.calls.stream.stop(callId);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#stopStream\n\n### Play synthesized text in a call\n\n```js\nnexmo.calls.talk.start(\n  callId,\n  {\n    text: 'No songs detected',\n    voiceName: 'Emma',\n    loop: 1\n  }\n);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#startTalk\n\n### Stop synthesized text in a call\n\n```js\nnexmo.calls.talk.stop(callId);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#stopTalk\n\n### Send DTMF to a Call\n\n```js\nnexmo.calls.dtmf.send(callId, params, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/voice#startDTMF\n\n\n## Files\n\nFor detailed information please see the documentation at https://developer.nexmo.com/voice/voice-api/guides/recording\n\n### Get a file (recording)\n\n```js\nnexmo.files.get(fileIdOrUrl, callback);\n```\n\n### Save a file (recording)\n\n```js\nnexmo.files.save(fileIdOrUrl, file, callback);\n```\n\n## Verify\n\n### Submit a Verification Request\n\n```js\nnexmo.verify.request({number:<NUMBER_TO_BE_VERIFIED>,brand:<NAME_OF_THE_APP>},callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/api/verify#verify-request\n\n### Validate the response of a Verification Request\n\n```js\nnexmo.verify.check({request_id:<UNIQUE_ID_FROM_VERIFICATION_REQUEST>,code:<CODE_TO_CHECK>},callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/api/verify#verify-check\n\n### Search one or more Verification Request\n\n```js\nnexmo.verify.search(<ONE_REQUEST_ID or ARRAY_OF_REQUEST_ID>,callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/api/verify#verify-search\n\n### Cancel verification\n\n```js\nnexmo.verify.control({request_id:<UNIQUE_ID_FROM_VERIFICATION_REQUEST>,cmd:'cancel'},callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/api/verify#verify-control\n\n### Trigger next verification event\n\n```js\nnexmo.verify.control({request_id:<UNIQUE_ID_FROM_VERIFICATION_REQUEST>,cmd:'trigger_next_event'},callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/api/verify#verify-control\n\n## Number Insight\n\n### Basic\n\n```js\nnexmo.numberInsight.get({level: 'basic', number: NUMBER}, callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/number-insight/building-blocks/number-insight-basic/node\n\nExample:\n\n```js\nnexmo.numberInsight.get({level: 'basic', number: '1-234-567-8900'},  callback);\n```\n\n### Standard\n\n```js\nnexmo.numberInsight.get({level: 'standard', number: NUMBER}, callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/number-insight/building-blocks/number-insight-standard/node\n\nExample:\n\n```js\nnexmo.numberInsight.get({level: 'standard', number: '1-234-567-8900'}, callback);\n```\n\n### Advanced\n\n```js\nnexmo.numberInsight.get({level: 'advancedSync', number: NUMBER}, callback);\n```\n\nFor more information check the documentation at https://developer.nexmo.com/number-insight/building-blocks/number-insight-advanced/node\n\n### Advanced Async\n\nNumber Insight Advanced might take a few seconds to return a result, therefore the option exists to process the result asynchronously through a webhook.\n\n```js\nnexmo.numberInsight.get({level: 'advancedAsync', number: NUMBER, callback: \"http://example.com\"}, callback);\n```\n\nIn this case, the result of your insight request is posted to the callback URL as a webhook. For more details on webhooks see the [Number Insight Advanced](https://developer.nexmo.com/number-insight/building-blocks/number-insight-advanced-async-callback/node) documentation.\n\n## Applications\n\nFor an overview of applications see https://developer.nexmo.com/concepts/guides/applications\n\n### Create an App\n\n```js\nnexmo.applications.create(params, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/application.v2#createApplication\n\n`params` can be\n\n``` json\n{\n\"name\": \"My Application\",\n  \"capabilities\": {\n    \"voice\": {\n      \"webhooks\": {\n        \"answer_url\": {\n          \"address\": \"https://example.com/webhooks/answer\",\n          \"http_method\": \"POST\"\n        },\n        \"event_url\": {\n          \"address\": \"https://example.com/webhooks/event\",\n          \"http_method\": \"POST\"\n        }\n      }\n    },\n    \"messages\": {\n      \"webhooks\": {\n        \"inbound_url\": {\n          \"address\": \"https://example.com/webhooks/inbound\",\n          \"http_method\": \"POST\"\n        },\n        \"status_url\": {\n          \"address\": \"https://example.com/webhooks/status\",\n          \"http_method\": \"POST\"\n        }\n      }\n    },\n    \"rtc\": {\n      \"webhooks\": {\n        \"event_url\": {\n          \"address\": \"https://example.com/webhooks/event\",\n          \"http_method\": \"POST\"\n        }\n      }\n    },\n    \"vbc\": {}\n  }\n}\n```\n\n### Get a single App\n\n```js\nnexmo.applications.get(appId, callback, v2flag);\n```\n\nFor more information see https://developer.nexmo.com/api/application.v2#getApplication\n\n - `v2flag` - if `true`, you'll receive the V2 API response, else you'll receive a V1 style response from the V2 API\n\n### Get Apps by a filter\n\n```js\nnexmo.applications.get(options, callback, v2flag);\n```\n\nFor more information see https://developer.nexmo.com/api/application.v2#listApplication\n- `options` - filter options, use `{}` to get all your applications\n- `v2flag` - if `true`, you'll receive the V2 API response, else you'll receive a V1 style response from the V2 API\n\n\n### Update an App\n\n```js\nnexmo.applications.update(appId, params, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/application.v2#updateApplication\n\n### Delete an App\n\n```js\nnexmo.application.delete(appId, callback);\n```\n\nFor more information see https://developer.nexmo.com/api/application.v2#deleteApplication\n\n## Management\n\n### Check Account Balance\n\n```js\nnexmo.account.checkBalance(callback);\n```\n\n### List Account Secrets\n\n```js\nnexmo.account.listSecrets(apiKey, callback);\n```\n\n### Get Account Secret\n\n```js\nnexmo.account.getSecret(apiKey, secretId, callback);\n```\n\n### Create Account Secret\n\n```js\nnexmo.account.createSecret(apiKey, secret, callback);\n```\n\n### Delete Account Secret\n\n```js\nnexmo.account.deleteSecret(apiKey, secretId, callback);\n```\n\n### Get Pricing for sending a message to a country.\n\n```js\nnexmo.number.getPricing(countryCode, callback);\n```\n\n* `countryCode` - 2 letter ISO Country Code\n\n### Get Pricing for sending a message or making a call to a number.\n\n```js\nnexmo.number.getPhonePricing(product, msisdn, callback);\n```\n\n* `product` - either `voice` or `sms`\n* `msisdn` - Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. i.e. 447700900000\n\n### Get all numbers associated with the account.\n\n```js\nnexmo.number.get(options, callback);\n```\n\n* `options` parameter is an optional Dictionary Object containing any of the following parameters\n  * `pattern`\n  * `search_pattern`\n  * `index`\n  * `size`\n  * `has_application`\n  * `application_id`\n\nFor more details about these options, refer to the [Numbers API reference](https://developer.nexmo.com/api/numbers#getOwnedNumbers)\n\nExample:\n\n```js\nnexmo.number.get({pattern:714,index:1,size:50,search_pattern:2}, callback);\n```\n\n### Search for MSISDN's available to purchase\n\n```js\nnexmo.number.search(countryCode,options,callback);\n```\n\n`options` parameter is optional. They can be one of the following :\n\n1. number pattern to match the search (eg. 1408)\n2. Dictionary Object optionally containing the following parameters :\n  * `pattern`\n  * `search_pattern`\n  * `type`\n  * `features`\n  * `index`\n  * `size`\n\nFor more details about these options, refer to the [Numbers API reference](https://developer.nexmo.com/api/numbers#getAvailableNumbers)\n\nExample:\n\n```js\nnexmo.number.search('US',{pattern:3049,index:1,size:50,type:'mobile-lvn',features:'VOICE',search_pattern:2}, callback);\n```\n\n### Purchase Number\n\n```js\nnexmo.number.buy(countryCode, msisdn, callback);\n```\n\nFor more details on these parameters, see the [Numbers API reference](https://developer.nexmo.com/api/numbers#buyANumber).\n\n### Cancel Number\n\n```js\nnexmo.number.cancel(countryCode, msisdn, callback);\n```\n\nFor more details on these parameters, see the [Numbers API reference](https://developer.nexmo.com/api/numbers#cancelANumber).\n\n### Update Number\n\n```js\nnexmo.number.update(countryCode, msisdn, params, callback);\n```\n\n`params` is a dictionary of parameters as described in the [Numbers API reference](https://developer.nexmo.com/api/numbers#updateANumber).\n\n### Update Password (API Secret)\n\n```js\nnexmo.account.updatePassword(<NEW_PASSWORD>,callback);\n```\n\n### Update Callback URL associated to the account\n\n```js\nnexmo.account.updateSMSCallback(<NEW_CALLBACK_URL>,callback);\n```\n\n### Change Delivery Receipt URL associated to the account\n\n```js\nnexmo.account.updateDeliveryReceiptCallback(<NEW_DR_CALLBACK_URL>,callback);\n```\n\n## Redact\n\n### Redact a specific ID\n\n```js\nnexmo.redact.transaction(id, type, callback);\n```\n\n## Pricing\n\n`type` is the type of service you wish to retrieve pricing for: either `sms`, `sms-transit` or `voice`.\n\n### Get pricing for a specific country\n\n```js\nnexmo.pricing.get(type, country_code, callback);\n```\n\n### Get pricing for all countries\n\n```js\nnexmo.pricing.getFull(type, callback);\n```\n\n### Get pricing for a specific dialing prefix\n\n```js\nnexmo.pricing.getPrefix(type, country_prefix, callback);\n```\n\n### Get pricing for a specific phone number\n\n```js\nnexmo.pricing.getPhone(type, phone, callback);\n```\n\n## Media\n\n### Upload a file\n\n```js\nnexmo.media.upload({\"file\": \"/path/to/file\"}, callback);\n```\n\n### Upload from a URL\n\n```js\nnexmo.media.upload({\"url\": \"https://example.com/ncco.json\"}, callback);\n```\n\n### Search existing media\n\n```js\n// See https://ea.developer.nexmo.com/api/media#search-media-files\n// for possible search parameters\nnexmo.media.search({ page_size: 1, page_index: 1 }, callback);\n```\n\n### Download media\n\n```js\nnexmo.media.download(id, callback);\n```\n\n### Delete media\n\n```js\nnexmo.media.delete(id, callback);\n```\n\n### Update media\n\n```js\nnexmo.media.update(id, body, callback);\n```\n\n### Get media details\n\n```js\nnexmo.media.get(id, callback);\n```\n\n## JWT\n\nThere are two ways of generating a JWT. You can use the function that exists on the Nexmo definition:\n\n```js\nconst Nexmo = require('nexmo');\n\nconst jwt = Nexmo.generateJwt('path/to/private.key', {application_id: APP_ID});\n```\n\nOr via a `Nexmo` instance where your supplied `applicationId` and `privateKey` credentials will be used:\n\n```js\nconst Nexmo = require('nexmo');\n\nconst nexmo = new Nexmo({\n    apiKey: API_KEY,\n    apiSecret: API_SECRET,\n    applicationId: APP_ID,\n    privateKey: PRIVATE_KEY_PATH,\n  });\n\nconst jwt = nexmo.generateJwt();\n```\n\n## Signature\n\nThere are two ways of generating a signature hash. Both strip the `sig` parameter if supplied. You can use the function that exists on the Nexmo definition:\n\n```js\nconst Nexmo = require('nexmo');\n\nconst hash = Nexmo.generateSignature(SIGNATURE_METHOD, SIGNATURE_SECRET, params);\n```\n\nOr via a `Nexmo` instance where your supplied `signatureSecret` and `signatureMethod`:\n\n```js\nconst Nexmo = require('nexmo');\n\nconst nexmo = new Nexmo({\n    apiKey: API_KEY,\n    apiSecret: API_SECRET,\n    signatureSecret: SIGNATURE_SECRET,\n    signatureMethod: SIGNATURE_METHOD,\n  });\n\nconst hash = nexmo.generateSignature();\n```\n\n`SIGNATURE_METHOD` is the signature method matching the one you gave Nexmo. Must be one of \"md5hash\", \"md5\", \"sha1\", \"sha256\", or \"sha512\".\n\n\n\n## Voice (Deprecated)\n\n### Send TTS Message\n\n```js\nnexmo.voice.sendTTSMessage(<TO_NUMBER>,message,options,callback);\n```\n\n### Send TTS Prompt With Capture\n\n```js\nnexmo.sendTTSPromptWithCapture(<TO_NUMBER>,message,<MAX_DIGITS>, <BYE_TEXT>,options,callback);\n```\n\n### Send TTS Prompt With Confirm\n\n```js\nnexmo.voice.sendTTSPromptWithConfirm(<TO_NUMBER>, message ,<MAX_DIGITS>,'<PIN_CODE>',<BYE_TEXT>,<FAILED_TEXT>,options,callback);\n```\n\n## Testing\n\nRun:\n\n```bash\nnpm test\n```\n\nOr to continually watch and run tests as you change the code:\n\n```bash\nnpm run-script test-watch\n```\n\n## Examples\n\nSee [examples/README.md](examples/README.md).\n\nAlso, see the [Nexmo Node Quickstarts repo](https://github.com/nexmo-community/nexmo-node-quickstart).\n\n## Creating your own requests\n\n> #### IMPORTANT\n> This section uses internal APIs and should not be relied on. We make no guarantees that the interface is stable. Relying on these methods is not recommended for production applications\n\nFor endpoints that are not yet implemented, you can use the Nexmo HTTP Client to\nmake requests with the correct authentication method.\n\nIn these examples, we assume that you've created a `nexmo` instance as follows:\n\n```javascript\nconst nexmo = new Nexmo({\n    apiKey: 'API_KEY',\n    apiSecret: 'API_SECRET',\n    applicationId: 'APPLICATION_ID',\n    privateKey: './private.key',\n});\n```\n\n* If your API endpoint is on `api.nexmo.com`, use the `nexmo.options.api` object.\n* If your API endpoint is on `rest.nexmo.com`, use the `nexmo.options.rest` object.\n\nBoth of these objects expose the following methods:\n\n* `get(path, params, callback, useJwt)` (`params` is the query string to use)\n* `post(path, params, callback, useJwt)` (`params` is the POST body to send)\n* `postUseQueryString(path, params, callback, useJwt)` (`params` is the query string to use)\n* `delete(path, callback, useJwt)`\n\nTo make a request to `api.nexmo.com/v1/calls?status=rejected`:\n\n```javascript\nnexmo.options.api.get(\n    \"/v1/calls\",\n    {\"status\": \"rejected\"},\n    function(err, data){\n        console.log(err);\n        console.log(data);\n    },\n    true // Use JWT for authentication\n);\n```\n\nTo make a request to `rest.nexmo.com/sms/json?from=Demo&to=447700900000&text=Testing`:\n\n```javascript\nnexmo.options.rest.postUseQueryString(\n    \"/sms/json\",\n    {\"from\": \"Demo\", \"to\": \"447700900000\", \"text\": \"Testing\"},\n    function(err, data){\n        console.log(err);\n        console.log(data);\n    },\n    false // Don't use JWT, fall back to API key/secret\n);\n```\n\n## API Coverage\n\n* Voice\n  * [x] Outbound Calls\n  * [ ] Inbound Call Webhook\n  * [x] Update Calls\n  * [x] Stream to Call\n  * [x] Talk to Call\n  * [x] DTMF to Call\n* Messaging\n  * [x] Send\n  * [ ] Delivery Receipt Webhook\n  * [ ] Inbound Message Webhook\n  * [x] Search\n    * [x] Message\n    * [x] Messages\n    * [x] Rejections\n  * [ ] US Short Codes\n    * [ ] Two-Factor Authentication\n    * [ ] Event-Based Alerts\n      * [ ] Sending Alerts\n      * [ ] Campaign Subscription Management\n* Number Insight\n  * [X] Basic\n  * [X] Standard\n  * [X] Advanced\n  * [X] Advanced Async\n  * [ ] Advanced Async Webhook\n* Verify\n  * [x] Verify\n  * [x] Check\n  * [x] Search\n  * [x] Control\n* Applications\n  * [x] Create an Application\n  * [x] Get Applications\n  * [x] Update an Application\n  * [x] Delete an Application\n* Account\n  * [X] Balance\n  * [x] Pricing\n  * [x] Settings\n  * [x] Top Up\n  * [x] Numbers\n    * [x] Search\n    * [x] Buy\n    * [x] Cancel\n    * [x] Update\n* Media\n  * [x] Upload\n  * [x] Download\n  * [x] Search\n  * [x] Get\n  * [x] Update\n  * [x] Delete\n* Voice (Deprecated)\n  * [x] Outbound Calls\n  * [ ] Inbound Call Webhook\n  * [x] Text-To-Speech Call\n  * [x] Text-To-Speech Prompt\n* Redact\n  * [x] Transaction\n\n\n## License\n\nMIT - see [LICENSE](LICENSE.txt)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nexmo/nexmo-node.git"
  },
  "scripts": {
    "compile": "babel -d lib src/ -s inline",
    "lint": "eslint src test",
    "lint-fix": "eslint --fix src test",
    "prepublish": "npm run compile",
    "pretest": "npm run lint",
    "report-coverage": "cross-env NODE_ENV=test nyc --reporter=text-lcov mocha > coverage.lcov",
    "test": "npm run test-no-lint",
    "test-coverage": "cross-env NODE_ENV=test nyc mocha",
    "test-coverage-html": "cross-env NODE_ENV=test nyc --reporter html mocha",
    "test-no-lint": "npm run compile && mocha --compilers ./node_modules/.bin/_mocha --compilers js:babel-register ./test/*-test.js",
    "test-watch": "nodemon --watch src --watch test -x 'npm run test-no-lint'"
  },
  "types": "./typings/index.d.ts",
  "version": "2.6.0"
}
